# expect: UNSAT
val term : type.
assert
  exists (X:term).
    (exists (Y:term). ((forall (Z:term). ((Z = Y) || (Z = X))) && (X != Y))).
val f : term -> term -> prop.
goal
  (exists (Z:term).
     (forall (X:term).
        ((exists (W:term). (forall (Y:term). ((f X Y) <=> (Y = W))))
         <=> (X = Z))))
  <=> (exists (W:term).
         (forall (Y:term).
            ((exists (Z:term). (forall (X:term). ((f X Y) <=> (X = Z))))
             <=> (Y = W)))).
