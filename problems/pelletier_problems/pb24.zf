# expect: UNSAT
val term : type.
val q : term -> prop.
val s : term -> prop.
assert ~ (exists (X:term). ((q X) && (s X))).
val r : term -> prop.
val p : term -> prop.
assert forall (X:term). ((p X) => ((r X) || (q X))).
assert (~ (exists (X:term). (p X))) => (exists (X:term). (q X)).
assert forall (X:term). (((r X) || (q X)) => (s X)).
goal exists (X:term). ((r X) && (p X)).
